= form_for @app do |f|
  = form_errors(@app)

  - unless @app.persisted?
    .form-group.required
      = f.label :name
      = f.text_field :name, class: 'form-control'
      %small.form-text.text-muted App names can contain lowercase alphanumerics and dashes only.

  .form-group
    = f.label :description
    = f.text_area :description, class: 'form-control'
    %small.form-text.text-muted A short description of this app's purpose.

  .form-group.app-image-source-selector
    = f.label :image_source, 'Image source'
    .btn-group.btn-group-toggle{ data: { toggle: :buttons} }
      = f.label :image_source_dockerhub, class: 'btn btn-light' do
        = f.radio_button :image_source, :dockerhub
        Docker Hub
      = f.label :image_source_ecr, class: 'btn btn-light' do
        = f.radio_button :image_source, :ecr
        ECR

    %small.form-text.text-muted Select whether images will be sourced from Docker Hub or a private ECR repository.


  - if ENV['GRAYLOG_ENABLED'].present?
    .form-group.form-check
      = f.check_box :add_graylog_stream, class: 'form-check-input', checked: @app.graylog_stream.present?, disabled: @app.graylog_stream.present?
      = f.label :add_graylog_stream, "With Graylog stream"
      - if @app.graylog_stream.present?
        = f.hidden_field :update_graylog_stream, value: '1'
      %small.form-text.text-muted Tick for an app with an associated Graylog stream. Updating the 'Repository name' field will update the index that the stream belongs to.


  .form-group.required
    = f.label :repository_name, "Repository name"
    = f.text_field :repository_name, class: 'form-control'
    %small.form-text.text-muted Name of the repository to use for this app, including namespace (e.g. 'f1000-collector', 'library/memcached')

  .form-group.auto-deploy-field
    .form-group.form-check
      = f.check_box :auto_deploy, class: 'form-check-input'
      = f.label :auto_deploy, "Auto-deploy new ECR images from branch"
      %small.form-text.text-muted Tick to automatically deploy this application when new images are pushed to ECR from the specified branch.
      .auto-deploy-input.form-group
        = f.text_field :auto_deploy_branch, class: 'form-control', placeholder: 'Branch to automatically deploy.'


  .form-group.required
    = f.label :job_spec, 'Nomad job spec'
    = f.text_area :job_spec, class: 'form-control text-monospace', rows: 20
    %small.form-text.text-muted Nomad job specification in HCL format. The job name and docker image fields will be ignored.

  .form-group.buttons
    = f.submit class: 'btn btn-primary'
    = link_to 'Cancel', apps_path, class: 'btn btn-secondary'
